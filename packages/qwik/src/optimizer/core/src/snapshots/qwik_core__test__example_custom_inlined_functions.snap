---
source: packages/qwik/src/optimizer/core/src/test.rs
expression: output
---
==INPUT==


import { component$, $, useStore, wrap, useEffect } from '@builder.io/qwik';

export const useMemoQrl = (qrt) => {
    useEffect(qrt);
};

export const useMemo$ = wrap(useMemoQrl);

export const App = component$((props) => {
    const state = useStore({count: 0});
    useMemo$(() => {
        console.log(state.count);
    });
    return $(() => (
        <div>{state.count}</div>
    ));
});

export const Lightweight = (props) => {
    useMemo$(() => {
        console.log(state.count);
    });
});

============================= test.js ==

import { componentQrl } from "@builder.io/qwik";
import { qrl } from "@builder.io/qwik";
import { wrap, useEffect } from '@builder.io/qwik';
export const useMemoQrl = (qrt)=>{
    useEffect(qrt);
};
export const useMemo$ = wrap(useMemoQrl);
export const App = /*#__PURE__*/ componentQrl(qrl(()=>import("./app_component_ckepmxzlub0")
, "App_component_ckEPmXZlub0"));
export const Lightweight = (props)=>{
    useMemoQrl(qrl(()=>import("./lightweight_usememo_uicxvtqf1a8")
    , "Lightweight_useMemo_UIcxVTQF1a8"));
};

============================= app_component_usememo_6sc9kvki3y0.js (ENTRY POINT)==

import { useLexicalScope } from "@builder.io/qwik";
export const App_component_useMemo_6Sc9KVki3Y0 = ()=>{
    const [state] = useLexicalScope();
    console.log(state.count);
};

/*
{
  "origin": "test.tsx",
  "name": "App_component_useMemo_6Sc9KVki3Y0",
  "entry": null,
  "displayName": "App_component_useMemo",
  "hash": "6Sc9KVki3Y0",
  "canonicalFilename": "app_component_usememo_6sc9kvki3y0",
  "extension": "js",
  "parent": "App_component_ckEPmXZlub0",
  "ctxKind": "function",
  "ctxName": "useMemo$",
  "captures": true,
  "loc": [
    280,
    327
  ]
}
*/
============================= lightweight_usememo_uicxvtqf1a8.js (ENTRY POINT)==

export const Lightweight_useMemo_UIcxVTQF1a8 = ()=>{
    console.log(state.count);
};

/*
{
  "origin": "test.tsx",
  "name": "Lightweight_useMemo_UIcxVTQF1a8",
  "entry": null,
  "displayName": "Lightweight_useMemo",
  "hash": "UIcxVTQF1a8",
  "canonicalFilename": "lightweight_usememo_uicxvtqf1a8",
  "extension": "js",
  "parent": null,
  "ctxKind": "function",
  "ctxName": "useMemo$",
  "captures": false,
  "loc": [
    450,
    497
  ]
}
*/
============================= app_component_ckepmxzlub0.js (ENTRY POINT)==

import { qrl } from "@builder.io/qwik";
import { useMemoQrl } from "./test";
import { useStore } from "@builder.io/qwik";
export const App_component_ckEPmXZlub0 = (props)=>{
    const state = useStore({
        count: 0
    });
    useMemoQrl(qrl(()=>import("./app_component_usememo_6sc9kvki3y0")
    , "App_component_useMemo_6Sc9KVki3Y0", [
        state
    ]));
    return qrl(()=>import("./app_component_1_w0t0o3qmovu")
    , "App_component_1_w0t0o3QMovU", [
        state
    ]);
};

/*
{
  "origin": "test.tsx",
  "name": "App_component_ckEPmXZlub0",
  "entry": null,
  "displayName": "App_component",
  "hash": "ckEPmXZlub0",
  "canonicalFilename": "app_component_ckepmxzlub0",
  "extension": "js",
  "parent": null,
  "ctxKind": "function",
  "ctxName": "component$",
  "captures": false,
  "loc": [
    214,
    393
  ]
}
*/
============================= app_component_1_w0t0o3qmovu.js (ENTRY POINT)==

import { useLexicalScope } from "@builder.io/qwik";
import { jsx as _jsx } from "@builder.io/qwik/jsx-runtime";
export const App_component_1_w0t0o3QMovU = ()=>{
    const [state] = useLexicalScope();
    return /*#__PURE__*/ _jsx("div", {
        children: state.count
    });
};
import { handleWatch as hW } from "@builder.io/qwik";
hW.issue123 && hW.issue123();
export { hW as handleWatch };

/*
{
  "origin": "test.tsx",
  "name": "App_component_1_w0t0o3QMovU",
  "entry": null,
  "displayName": "App_component_1",
  "hash": "w0t0o3QMovU",
  "canonicalFilename": "app_component_1_w0t0o3qmovu",
  "extension": "js",
  "parent": "App_component_ckEPmXZlub0",
  "ctxKind": "function",
  "ctxName": "$",
  "captures": true,
  "loc": [
    343,
    389
  ]
}
*/
== DIAGNOSTICS ==

[]
