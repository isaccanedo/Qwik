---
source: packages/qwik/src/optimizer/core/src/test.rs
expression: output
---
==INPUT==


import { component$, useClientEffect$, useStore, useStyles$ } from '@builder.io/qwik';
import { thing } from './sibling';
import mongodb from 'mongodb';

export const Child = component$(() => {

    useStyles$('somestring');
    const state = useStore({
        count: 0
    });

    // Double count watch
    useClientEffect$(() => {
        state.count = thing.doStuff() + import("./sibling");
    });

    return (
        <div onClick$={() => console.log(mongodb)}>
        </div>
    );
});


============================= test.tsx ==

import { componentQrl } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { useClientEffectQrl } from "@builder.io/qwik";
import { useLexicalScope } from "@builder.io/qwik";
import { useStylesQrl } from "@builder.io/qwik";
import { useStore } from '@builder.io/qwik';
import { thing } from './sibling';
import mongodb from 'mongodb';
export const Child = /*#__PURE__*/ componentQrl(inlinedQrl(()=>{
    useStylesQrl(inlinedQrl('somestring', "Child_component_useStyles_qBZTuFM0160"));
    const state = useStore({
        count: 0
    });
    // Double count watch
    useClientEffectQrl(inlinedQrl(()=>{
        const [state] = useLexicalScope();
        state.count = thing.doStuff() + import("./sibling");
    }, "Child_component_useClientEffect_kYRT1iERt9g", [
        state
    ]));
    return <div onClick$={inlinedQrl(()=>console.log(mongodb)
    , "Child_component_div_onClick_elliVSnAiOQ")}>

        </div>;
}, "Child_component_9GyF01GDKqw"));

== DIAGNOSTICS ==

[]
